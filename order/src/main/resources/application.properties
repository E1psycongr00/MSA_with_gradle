

server.port=8074
server.servlet.context-path=/ecommerce/order

#spring
spring.application.name=ecommerce-order

# PostgreSQL
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:postgresql://${POSTGRES}:5432/order
spring.datasource.username=postgres
spring.datasource.password=admin1234
spring.datasource.schema=classpath:sql/ECOMMERCE_ORDER_DDL.sql
spring.datasource.data=classpath:sql/ECOMMERCE_ORDER_DML.sql
spring.datasource.initialization-mode=always

# MyBatis
mybatis.type-aliases-package=com.ecommerce.order.domain.entity
mybatis.mapper-locations=classpath:sql/*.xml

# Customer API
customer.api.url=http://ecommerce-customer/ecommerce/customer

# hystrix setting
hystrix.command.default.execution.isolation.thread.timeoutInMiliseconds=5000
hystrix.command.retrieveCustomer.execution.isolation.thread.timeoutInMiliseconds=5000

# ribbon setting
ecommerce-customer.ribbon.listOfServers=localhost:8076, localhost:9076 

# my custom ribbon client setting
ecommerce-customer-custom.ribbon.MaxAutoRetries=1
ecommerce-customer-custom.ribbon.listOfServers=localhost:8076, localhost:9076
# Env
POSTGRES=localhost




